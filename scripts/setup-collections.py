import boto3
import os
from botocore.exceptions import ClientError, NoCredentialsError

def setup_rekognition_collection():
    try:
        # Configurar cliente Rekognition
        rekognition = boto3.client('rekognition', region_name='us-east-2')  # ‚Üê Corrigir para us-east-2
        
        # Verificar credenciais
        sts = boto3.client('sts')
        identity = sts.get_caller_identity()
        print(f"‚úÖ Credenciais v√°lidas - Usu√°rio: {identity['Arn']}")
        
        # Criar cole√ß√£o para faces conhecidas (opcional)
        try:
            response = rekognition.create_collection(
                CollectionId='age-estimation-faces'
            )
            print("‚úÖ Cole√ß√£o Rekognition criada:", response['CollectionArn'])
        except rekognition.exceptions.ResourceAlreadyExistsException:
            print("‚ÑπÔ∏è Cole√ß√£o j√° existe")
        
        # Listar cole√ß√µes existentes
        collections = rekognition.list_collections()
        print("üìã Cole√ß√µes dispon√≠veis:", collections['CollectionIds'])
        
        return True
        
    except NoCredentialsError:
        print("‚ùå ERRO: Credenciais AWS n√£o encontradas")
        print("\nüìù Como configurar:")
        print("1. Execute: aws configure")
        print("2. Ou defina vari√°veis de ambiente:")
        print("   - AWS_ACCESS_KEY_ID")
        print("   - AWS_SECRET_ACCESS_KEY") 
        print("   - AWS_DEFAULT_REGION")
        return False
        
    except ClientError as e:
        print(f"‚ùå Erro AWS: {e.response['Error']['Message']}")
        return False

if __name__ == "__main__":
    print("üîß Configurando ambiente AWS Rekognition...")
    success = setup_rekognition_collection()
    
    if success:
        print("\nüéâ Configura√ß√£o conclu√≠da com sucesso!")
    else:
        print("\nüí° Dica: Verifique se voc√™ tem permiss√µes para:")
        print("   - rekognition:CreateCollection")
        print("   - rekognition:ListCollections")